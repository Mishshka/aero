import rasterio
import matplotlib.pyplot as plt
from pathlib import Path
import numpy as np

def visualize_large_dem_tif(file_path, downscale_factor=10):
    path = Path(file_path)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞: —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç?
    if not path.exists():
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {path.absolute()}")
        return

    print(f"‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω: {path.absolute()}")

    try:
        with rasterio.open(path) as src:
            # –£–º–µ–Ω—å—à–∞–µ–º —Ä–∞–∑–º–µ—Ä –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏
            width = src.width // downscale_factor
            height = src.height // downscale_factor

            # –ß–∏—Ç–∞–µ–º –ø–µ—Ä–≤—ã–π –∫–∞–Ω–∞–ª —Å —É–º–µ–Ω—å—à–µ–Ω–∏–µ–º
            band1 = src.read(1, out_shape=(height, width), resampling=rasterio.enums.Resampling.bilinear)

            print(f"üìä –§–æ—Ä–º–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ —É–º–µ–Ω—å—à–µ–Ω–∏—è: {band1.shape} (–≤—ã—Å–æ—Ç–∞ x —à–∏—Ä–∏–Ω–∞)")
            print(f"üìè –ò—Å—Ö–æ–¥–Ω—ã–π —Ä–∞–∑–º–µ—Ä: {src.width}x{src.height} ‚Üí –£–º–µ–Ω—å—à–µ–Ω–æ –≤ {downscale_factor} —Ä–∞–∑")

            # –ó–∞–º–µ–Ω—è–µ–º NoData –Ω–∞ NaN
            if src.nodata is not None:
                band1 = band1.astype('float32')
                band1[band1 == src.nodata] = np.nan

            # –£–±–∏—Ä–∞–µ–º –≤—ã–±—Ä–æ—Å—ã –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–∞
            min_val = np.nanpercentile(band1, 1)
            max_val = np.nanpercentile(band1, 99)
            print(f"üìâ –î–∏–∞–ø–∞–∑–æ–Ω –≤—ã—Å–æ—Ç (1‚Äì99%): {min_val:.2f} –º ‚Äì {max_val:.2f} –º")

            # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
            plt.figure(figsize=(12, 8))
            img = plt.imshow(band1, cmap='gist_earth', vmin=min_val, vmax=max_val)
            plt.colorbar(img, label='–í—ã—Å–æ—Ç–∞ (–º)')
            plt.title("–¶–∏—Ñ—Ä–æ–≤–∞—è –º–æ–¥–µ–ª—å –≤—ã—Å–æ—Ç (DEM) - —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ", fontsize=14)
            plt.xlabel("–ü–∏–∫—Å–µ–ª–∏ (—É–º–µ–Ω—å—à–µ–Ω–æ)")
            plt.ylabel("–ü–∏–∫—Å–µ–ª–∏ (—É–º–µ–Ω—å—à–µ–Ω–æ)")
            plt.tight_layout()
            plt.show()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

# === –ó–ê–ü–£–°–ö ===
if __name__ == "__main__":
    file_path = "dem_part.tif"
    #file_path = "ortho 4 cm part.tif"
    visualize_large_dem_tif(file_path, downscale_factor=10)  # –ú–æ–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å 5, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –±–æ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π