import folium
import json
import os
from pathlib import Path

def visualize_geojson(file_path, output_html="map.html"):
    path = Path(file_path)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞: —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç?
    if not path.exists():
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {path.absolute()}")
        return

    print(f"‚úÖ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω: {path.absolute()}")

    # –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    try:
        with open(path, 'r', encoding='utf-8') as f:
            content = f.read()
        print(f"üìÑ –§–∞–π–ª –ø—Ä–æ—á–∏—Ç–∞–Ω. –î–ª–∏–Ω–∞: {len(content)} —Å–∏–º–≤–æ–ª–æ–≤.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
        return

    # –ò—Å–ø—Ä–∞–≤–∏–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ–±—Ä—ã–≤—ã (–µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –∑–∞–≤–µ—Ä—à—ë–Ω)
    content = content.strip()
    if not content.endswith('}'):
        content += '}'  # –ø–æ–ø—Ä–æ–±—É–µ–º –∑–∞–∫—Ä—ã—Ç—å
        print("‚ö†Ô∏è  –§–∞–π–ª –±—ã–ª –æ–±—Ä–µ–∑–∞–Ω ‚Äî –¥–æ–±–∞–≤–ª–µ–Ω–æ –∑–∞–∫—Ä—ã—Ç–∏–µ –æ–±—ä–µ–∫—Ç–∞")

    # –ü–∞—Ä—Å–∏–º JSON
    try:
        data = json.loads(content)
        print("‚úÖ GeoJSON —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")
    except json.JSONDecodeError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
        return

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–Ω—Ç—Ä –∫–∞—Ä—Ç—ã (—Å—Ä–µ–¥–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã)
    all_coords = []

    def extract_coords(geom):
        if geom["type"] == "MultiPolygon":
            for polygon in geom["coordinates"]:
                for ring in polygon:
                    all_coords.extend(ring)
        elif geom["type"] == "Polygon":
            for ring in geom["coordinates"]:
                all_coords.extend(ring)

    # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    features = data["features"] if data["type"] == "FeatureCollection" else [data]
    for feature in features:
        if "geometry" in feature:
            extract_coords(feature["geometry"])

    if not all_coords:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è")
        return

    # –í—ã—á–∏—Å–ª—è–µ–º —Ü–µ–Ω—Ç—Ä
    lats = [c[1] for c in all_coords]
    lons = [c[0] for c in all_coords]
    center_lat = sum(lats) / len(lats)
    center_lon = sum(lons) / len(lons)

    # –°–æ–∑–¥–∞—ë–º –∫–∞—Ä—Ç—É
    m = folium.Map(location=[center_lat, center_lon], zoom_start=14, tiles="OpenStreetMap")

    # –¶–≤–µ—Ç–∞ –ø–æ —Ç–∏–ø—É –æ–±—ä–µ–∫—Ç–∞
    color_map = {
        "–ü–∞—Ö–æ—Ç–Ω—ã–µ –∑–µ–º–ª–∏": "green",
        "–ó–∞–ª–µ–∂–∏ (—Ç—Ä–∞–≤—ã)": "orange",
        "–ó–∞–ª–µ–∂–∏ (–∫—É—Å—Ç–∞—Ä–Ω–∏–∫, –¥–µ—Ä–µ–≤—å—è)": "darkred",
        "–õ–µ—Å–∞ –∏ –ª–µ—Å–æ–ø–æ–ª–æ—Å—ã": "darkgreen",
        "–î–æ—Ä–æ–≥–∏": "gray",
        "–ù–µ–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º—ã–µ –≤–≤–∏–¥—É –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π —Ä–µ–ª—å–µ—Ñ–∞, —É–≤–ª–∞–∂–Ω–µ–Ω–∏—è –∏ –ø—Ä": "beige"
    }

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —É—á–∞—Å—Ç–æ–∫
    for feature in features:
        props = feature.get("properties", {})
        geom = feature.get("geometry")

        name = props.get("nm", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
        obj_type = props.get("object", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        area = props.get("area_ga", 0)
        fid = props.get("fid", "N/A")

        # –¶–≤–µ—Ç –ø–æ —Ç–∏–ø—É
        color = color_map.get(obj_type, "blue")

        # –í—Å–ø–ª—ã–≤–∞—é—â–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞
        popup_text = f"""
        <b>–£—á–∞—Å—Ç–æ–∫:</b> {name}<br>
        <b>–¢–∏–ø:</b> {obj_type}<br>
        <b>–ü–ª–æ—â–∞–¥—å:</b> {area:.3f} –≥–∞<br>
        <b>FID:</b> {fid}
        """
        popup = folium.Popup(popup_text, max_width=300)

        # –ü–æ–¥–ø–∏—Å—å –Ω–∞ –∫–∞—Ä—Ç–µ
        tooltip = f"{obj_type} ({area:.2f} –≥–∞)"

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–∏–≥–æ–Ω
        if geom and geom["type"] in ["Polygon", "MultiPolygon"]:
            folium.GeoJson(
                feature,
                style_function=lambda x, col=color: {"fillColor": col, "color": col, "weight": 2, "fillOpacity": 0.5},
                tooltip=tooltip,
                popup=popup
            ).add_to(m)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º
    m.save(output_html)
    print(f"üåç –ö–∞—Ä—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {os.path.abspath(output_html)}")
    print("‚úÖ –û—Ç–∫—Ä–æ–π —Ñ–∞–π–ª –≤ –±—Ä–∞—É–∑–µ—Ä–µ!")

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    file_path = "class_part.geojson"  # –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Ñ–∞–π–ª —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∏ –ª–µ–∂–∏—Ç —Ä—è–¥–æ–º
    visualize_geojson(file_path, "land_map.html")